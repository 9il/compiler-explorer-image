{
  "okToCache": true, 
  "code": 0, 
  "asm": [
    {
      "text": "testFunction(int*, int):", 
      "source": null
    }, 
    {
      "text": "        pushq   %rbp", 
      "source": 1
    }, 
    {
      "text": "        movq    %rsp, %rbp", 
      "source": 1
    }, 
    {
      "text": "        movq    %rdi, -24(%rbp)", 
      "source": 1
    }, 
    {
      "text": "        movl    %esi, -28(%rbp)", 
      "source": 1
    }, 
    {
      "text": "        movl    $0, -4(%rbp)", 
      "source": 2
    }, 
    {
      "text": "        movl    $0, -8(%rbp)", 
      "source": 3
    }, 
    {
      "text": "        jmp     .L2", 
      "source": 3
    }, 
    {
      "text": ".L3:", 
      "source": null
    }, 
    {
      "text": "        movl    -8(%rbp), %eax", 
      "source": 4
    }, 
    {
      "text": "        cltq", 
      "source": 4
    }, 
    {
      "text": "        salq    $2, %rax", 
      "source": 4
    }, 
    {
      "text": "        addq    -24(%rbp), %rax", 
      "source": 4
    }, 
    {
      "text": "        movl    (%rax), %eax", 
      "source": 4
    }, 
    {
      "text": "        addl    %eax, -4(%rbp)", 
      "source": 4
    }, 
    {
      "text": "        addl    $1, -8(%rbp)", 
      "source": 3
    }, 
    {
      "text": ".L2:", 
      "source": null
    }, 
    {
      "text": "        movl    -8(%rbp), %eax", 
      "source": 3
    }, 
    {
      "text": "        cmpl    -28(%rbp), %eax", 
      "source": 3
    }, 
    {
      "text": "        setl    %al", 
      "source": 3
    }, 
    {
      "text": "        testb   %al, %al", 
      "source": 3
    }, 
    {
      "text": "        jne     .L3", 
      "source": 3
    }, 
    {
      "text": "        movl    -4(%rbp), %eax", 
      "source": 6
    }, 
    {
      "text": "        leave", 
      "source": 7
    }, 
    {
      "text": "        ret", 
      "source": 7
    }, 
    {
      "text": "", 
      "source": null
    }
  ], 
  "stderr": [], 
  "stdout": []
}