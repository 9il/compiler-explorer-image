{
  "okToCache": true, 
  "code": 0, 
  "asm": [
    {
      "text": ".plt.got:", 
      "source": null
    }, 
    {
      "text": " jmp    QWORD PTR [rip+0x20050a]        # 600980 <_DYNAMIC+0x200>", 
      "opcodes": [
        "ff", 
        "25", 
        "0a", 
        "05", 
        "20", 
        "00"
      ], 
      "source": null, 
      "links": [
        {
          "to": 6293888, 
          "length": 6, 
          "offset": 42
        }
      ], 
      "address": 4195440
    }, 
    {
      "text": " xchg   ax,ax", 
      "opcodes": [
        "66", 
        "90"
      ], 
      "source": null, 
      "links": null, 
      "address": 4195446
    }, 
    {
      "text": "main:", 
      "source": null
    }, 
    {
      "text": " xor    eax,eax", 
      "opcodes": [
        "31", 
        "c0"
      ], 
      "source": 9, 
      "links": null, 
      "address": 4195456
    }, 
    {
      "text": " ret    ", 
      "opcodes": [
        "c3"
      ], 
      "source": 9, 
      "links": null, 
      "address": 4195458
    }, 
    {
      "text": " nop    WORD PTR cs:[rax+rax*1+0x0]", 
      "opcodes": [
        "66", 
        "2e", 
        "0f", 
        "1f", 
        "84", 
        "00", 
        "00", 
        "00", 
        "00", 
        "00"
      ], 
      "source": 9, 
      "links": null, 
      "address": 4195459
    }, 
    {
      "text": " nop    DWORD PTR [rax]", 
      "opcodes": [
        "0f", 
        "1f", 
        "00"
      ], 
      "source": 9, 
      "links": null, 
      "address": 4195469
    }, 
    {
      "text": "testFunction(int*, int):", 
      "source": null
    }, 
    {
      "text": " test   esi,esi", 
      "opcodes": [
        "85", 
        "f6"
      ], 
      "source": 3, 
      "links": null, 
      "address": 4195712
    }, 
    {
      "text": " jle    40059d <testFunction(int*, int)+0x1d>", 
      "opcodes": [
        "7e", 
        "19"
      ], 
      "source": 3, 
      "links": [
        {
          "to": 4195741, 
          "length": 6, 
          "offset": 8
        }
      ], 
      "address": 4195714
    }, 
    {
      "text": " xor    edx,edx", 
      "opcodes": [
        "31", 
        "d2"
      ], 
      "source": 3, 
      "links": null, 
      "address": 4195716
    }, 
    {
      "text": " xor    eax,eax", 
      "opcodes": [
        "31", 
        "c0"
      ], 
      "source": 3, 
      "links": null, 
      "address": 4195718
    }, 
    {
      "text": " nop    DWORD PTR [rax+rax*1+0x0]", 
      "opcodes": [
        "0f", 
        "1f", 
        "84", 
        "00", 
        "00", 
        "00", 
        "00", 
        "00"
      ], 
      "source": 3, 
      "links": null, 
      "address": 4195720
    }, 
    {
      "text": " add    eax,DWORD PTR [rdi+rdx*4]", 
      "opcodes": [
        "03", 
        "04", 
        "97"
      ], 
      "source": 4, 
      "links": null, 
      "address": 4195728
    }, 
    {
      "text": " add    rdx,0x1", 
      "opcodes": [
        "48", 
        "83", 
        "c2", 
        "01"
      ], 
      "source": 4, 
      "links": null, 
      "address": 4195731
    }, 
    {
      "text": " cmp    esi,edx", 
      "opcodes": [
        "39", 
        "d6"
      ], 
      "source": 3, 
      "links": null, 
      "address": 4195735
    }, 
    {
      "text": " jg     400590 <testFunction(int*, int)+0x10>", 
      "opcodes": [
        "7f", 
        "f5"
      ], 
      "source": 3, 
      "links": [
        {
          "to": 4195728, 
          "length": 6, 
          "offset": 8
        }
      ], 
      "address": 4195737
    }, 
    {
      "text": " repz ret ", 
      "opcodes": [
        "f3", 
        "c3"
      ], 
      "source": 3, 
      "links": null, 
      "address": 4195739
    }, 
    {
      "text": " xor    eax,eax", 
      "opcodes": [
        "31", 
        "c0"
      ], 
      "source": 2, 
      "links": null, 
      "address": 4195741
    }, 
    {
      "text": " ret    ", 
      "opcodes": [
        "c3"
      ], 
      "source": 7, 
      "links": null, 
      "address": 4195743
    }
  ], 
  "stderr": [], 
  "stdout": []
}